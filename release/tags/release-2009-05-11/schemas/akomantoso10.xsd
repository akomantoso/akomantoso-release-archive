<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns="http://www.akomantoso.org/1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            targetNamespace="http://www.akomantoso.org/1.0"
            elementFormDefault="qualified">



	  <xsd:annotation>
		    <xsd:documentation>
		 =====================================================================
		Akoma Ntoso main schema
		
		
		Release  05/05/2009
		technical supervision Fabio Vitali - University of Bologna
		legal domain supervision Monica Palmirani - University of Bologna
		
		The present schema uses systematically XML design patterns as
		described in http://www.xmlpatterns.com/
		A few of them are explicitly mentioned, when their use or approach
		was not felt clear or natural enough. Others are just used without
		mentions.
		===================================================================== 
		</xsd:documentation>
	  </xsd:annotation>

	  <xsd:annotation>
		    <xsd:documentation>
		 =====================================================================
		
		Main element groups
		
		===================================================================== 
		</xsd:documentation>
	  </xsd:annotation>

	  <xsd:group name="ANhier">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Group</type>
            <name>ANhier</name>
            <comment>The group ANhier lists the elements that belong to the Akoma Ntoso hierarchy</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:choice>
			      <xsd:element ref="section"/>
			      <xsd:element ref="part"/>
			      <xsd:element ref="paragraph"/>
			      <xsd:element ref="chapter"/>
			      <xsd:element ref="title"/>
			      <xsd:element ref="book"/>
			      <xsd:element ref="tome"/>
			      <xsd:element ref="article"/>
			      <xsd:element ref="clause"/>
			      <xsd:element ref="subsection"/>
			      <xsd:element ref="subpart"/>
			      <xsd:element ref="subparagraph"/>
			      <xsd:element ref="subchapter"/>
			      <xsd:element ref="subtitle"/>
			      <xsd:element ref="subclause"/>
		    </xsd:choice>
	  </xsd:group>

	  <xsd:group name="ANcontainers">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Group</type>
            <name>ANcontainers</name>
            <comment>The group ANcontainers lists the elements that are containers and are specific to the Akoma Ntoso vocabulary</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:choice>
			      <xsd:element ref="speech"/>
			      <xsd:element ref="question"/>
			      <xsd:element ref="answer"/>
			      <xsd:element ref="other"/>
			      <xsd:element ref="scene"/>
		    </xsd:choice>
	  </xsd:group>

	  <xsd:group name="ANblock">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Group</type>
            <name>ANblock</name>
            <comment>The group ANblock lists the elements that are blocks and are specific to the Akoma Ntoso vocabulary</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:choice>
			      <xsd:element ref="toc"/>
			      <xsd:element ref="list"/>
			      <xsd:element ref="tblock"/>
		    </xsd:choice>
	  </xsd:group>

	  <xsd:group name="ANinline">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Group</type>
            <name>ANinline</name>
            <comment>The group ANinline lists the elements that are inline and are specific to the Akoma Ntoso vocabulary</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:choice>
			      <xsd:element ref="def"/>
			      <xsd:element ref="remark"/>
			      <xsd:element ref="ref"/>
			      <xsd:element ref="mref"/>
			      <xsd:element ref="rref"/>
			      <xsd:element ref="mod"/>
			      <xsd:element ref="mmod"/>
			      <xsd:element ref="rmod"/>
			      <xsd:element ref="ins"/>
			      <xsd:element ref="del"/>
			      <xsd:element ref="omissis"/>
		    </xsd:choice>
	  </xsd:group>

	  <xsd:group name="ANtitleInline">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Group</type>
            <name>ANtitleInline</name>
            <comment>The group ANtitleInline lists the elements that are inline, are specific to the Akoma Ntoso vocabulary, and should only be used within the title element</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:choice>
			      <xsd:element ref="docType"/>
			      <xsd:element ref="docTitle"/>
			      <xsd:element ref="docNumber"/>
			      <xsd:element ref="docProponent"/>
			      <xsd:element ref="docDate"/>
			      <xsd:element ref="docPurpose"/>
		    </xsd:choice>
	  </xsd:group>

	  <xsd:group name="ANheaderInline">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Group</type>
            <name>ANheaderInline</name>
            <comment>The group ANheaderInline lists the elements that are inline, are specific to the Akoma Ntoso vocabulary, and should only be used within the header element</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:choice>
			      <xsd:element ref="courtType"/>
			      <xsd:element ref="neutralCitation"/>
			      <xsd:element ref="party"/>
			      <xsd:element ref="judge"/>
			      <xsd:element ref="lawyer"/>
			      <xsd:element ref="signature"/>
			      <xsd:element ref="opinion"/>
		    </xsd:choice>
	  </xsd:group>

	  <xsd:group name="ANotherInline">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Group</type>
            <name>ANotherInline</name>
            <comment>The group ANotherInline lists additional elements that are inline, and are specific to the Akoma Ntoso vocabulary</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:choice>
			      <xsd:element ref="entity"/>
			      <xsd:element ref="date"/>
		    </xsd:choice>
	  </xsd:group>

	  <xsd:group name="ANmarker">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Group</type>
            <name>ANmarker</name>
            <comment>The group ANmarker lists the elements that are markers and are specific to the Akoma Ntoso vocabulary</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:choice>
			      <xsd:element ref="noteRef"/>
			      <xsd:element ref="recordedTime"/>
			      <xsd:element ref="eol"/>
			      <xsd:element ref="eop"/>
		    </xsd:choice>
	  </xsd:group>

	  <xsd:group name="HTMLcontainers">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Group</type>
            <name>HTMLcontainers</name>
            <comment>The group HTMLcontainers lists the elements that are containers and were inherited from the HTML vocabulary</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:sequence>
			      <xsd:element ref="div"/>
		    </xsd:sequence>
	  </xsd:group>

	  <xsd:group name="HTMLblock">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Group</type>
            <name>HTMLblock</name>
            <comment>The group HTMLblock lists the elements that are blocks and were inherited from the HTML vocabulary</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:choice>
			      <xsd:element ref="p"/>
			      <xsd:element ref="ul"/>
			      <xsd:element ref="ol"/>
			      <xsd:element ref="table"/>
		    </xsd:choice>
	  </xsd:group>

	  <xsd:group name="HTMLinline">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Group</type>
            <name>HTMLinline</name>
            <comment>The group HTMLinline lists the elements that are inline and were inherited from the HTML vocabulary</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:choice>
			      <xsd:element ref="span"/>
			      <xsd:element ref="b"/>
			      <xsd:element ref="i"/>
			      <xsd:element ref="a"/>
		    </xsd:choice>
	  </xsd:group>

	  <xsd:group name="HTMLmarker">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Group</type>
            <name>HTMLmarker</name>
            <comment>The group HTMLmarker lists the elements that are marker and were inherited from the HTML vocabulary</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:sequence>
			      <xsd:element ref="img"/>
		    </xsd:sequence>
	  </xsd:group>

	  <xsd:group name="hierElements">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Group</type>
            <name>hierElements</name>
            <comment>The group hierElements lists all the elements that are hierarchical</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:choice>
			      <xsd:group ref="ANhier"/>
			      <xsd:element ref="hcontainer"/>
		    </xsd:choice>
	  </xsd:group>

	  <xsd:group name="containerElements">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Group</type>
            <name>containerElements</name>
            <comment>The group containerElements lists all the elements that are containers</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:choice>
			      <xsd:group ref="ANcontainers"/>
			      <xsd:group ref="HTMLcontainers"/>
			      <xsd:element ref="container"/>
		    </xsd:choice>
	  </xsd:group>

	  <xsd:group name="blockElements">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Group</type>
            <name>blockElements</name>
            <comment>The group blockElements lists all the elements that are blocks</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:choice>
			      <xsd:group ref="ANblock"/>
			      <xsd:group ref="HTMLblock"/>
			      <xsd:element ref="block"/>
			      <xsd:element ref="foreign"/>
		    </xsd:choice>
	  </xsd:group>

	  <xsd:group name="inlineElements">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Group</type>
            <name>inlineElements</name>
            <comment>The group inlineElements lists all the elements that are inline</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:choice>
			      <xsd:group ref="ANinline"/>
			      <xsd:group ref="HTMLinline"/>
			      <xsd:element ref="inline"/>
			      <xsd:group ref="ANtitleInline"/>
			      <xsd:group ref="ANheaderInline"/>
			      <xsd:group ref="ANotherInline"/>
		    </xsd:choice>
	  </xsd:group>

	  <xsd:group name="markerElements">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Group</type>
            <name>markerElements</name>
            <comment>The group markerElements lists all the elements that are markers</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:choice>
			      <xsd:group ref="ANmarker"/>
			      <xsd:group ref="HTMLmarker"/>
			      <xsd:element ref="marker"/>
		    </xsd:choice>
	  </xsd:group>

	  <xsd:group name="inlineCM">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Group</type>
            <name>inlineCM</name>
            <comment>The group inlineCM is the content model of blocks and inlines, and is composed of all the inlines and all the markers</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:choice>
			      <xsd:group ref="inlineElements"/>
			      <xsd:group ref="markerElements"/>
		    </xsd:choice>
	  </xsd:group>

	  <xsd:group name="judgementBlock">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Group</type>
            <name>judgementBlock</name>
            <comment>The group judgementBlock lists the structures that should be found in a judgement</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:choice>
			      <xsd:element ref="introduction"/>
			      <xsd:element ref="background"/>
			      <xsd:element ref="motivation"/>
			      <xsd:element ref="decision"/>
		    </xsd:choice>
	  </xsd:group>

	  <xsd:group name="speechSection">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Group</type>
            <name>speechSection</name>
            <comment>The group speechSection lists the structures that should contain speeches</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:choice>
			      <xsd:element ref="administrationOfOath"/>
			      <xsd:element ref="declarationOfVote"/>
			      <xsd:element ref="communication"/>
			      <xsd:element ref="petitions"/>
			      <xsd:element ref="papers"/>
			      <xsd:element ref="noticesOfMotion"/>
			      <xsd:element ref="questions"/>
			      <xsd:element ref="address"/>
			      <xsd:element ref="proceduralMotions"/>
			      <xsd:element ref="pointOfOrder"/>
			      <xsd:element ref="subdivision"/>
		    </xsd:choice>
	  </xsd:group>

	  <xsd:annotation>
		    <xsd:documentation>
		 =====================================================================
		
		Attribute groups
		
		===================================================================== 
		</xsd:documentation>
	  </xsd:annotation>

	  <xsd:attributeGroup name="name">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Attlist</type>
            <name>name</name>
            <comment>The attribute name is used to give a name to all generic elements</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:attribute name="name" type="xsd:string" use="required"/>
	  </xsd:attributeGroup>

	  <xsd:attributeGroup name="source">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Attlist</type>
            <name>source</name>
            <comment>The attribute source links to the aent (person, organization) providing the specific annotation or markup</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:attribute name="source" type="xsd:anyURI" use="required"/>
	  </xsd:attributeGroup>

	  <xsd:attributeGroup name="date">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Attlist</type>
            <name>date</name>
            <comment>The attribute date is used to give a normalized value for a date according to the XSD syntax YYYY-MM-DD</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:attribute name="date" type="xsd:date" use="required"/>
	  </xsd:attributeGroup>

	  <xsd:attributeGroup name="time">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Attlist</type>
            <name>time</name>
            <comment>The attribute time is used to give a normalized value for a time according to the XSD syntax HH:MM:SS</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:attribute name="time" type="xsd:time" use="required"/>
	  </xsd:attributeGroup>

	  <xsd:attributeGroup name="link">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Attlist</type>
            <name>link</name>
            <comment>The attribute href is used to specify an internal or external destination for a reference, a citation, an access to the ontology or a hypertext link. In elements using this attribute definition the href attribute is required</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:attribute name="href" type="xsd:anyURI" use="required"/>
	  </xsd:attributeGroup>

	  <xsd:attributeGroup name="linkopt">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Attlist</type>
            <name>linkopt</name>
            <comment>The attribute href is used to specify an internal or external destination for a reference, a citation, an access to the ontology or a hypertext link. In elements using this attribute definition the href attribute is optional</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:attribute name="href" type="xsd:anyURI"/>
	  </xsd:attributeGroup>

	  <xsd:attributeGroup name="value">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Attlist</type>
            <name>value</name>
            <comment>The attribute value is used to specify a value for metadata elements. In elements using this attribute definition the value attribute is required</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:attribute name="value" type="xsd:string" use="required"/>
	  </xsd:attributeGroup>

	  <xsd:attributeGroup name="optvalue">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Attlist</type>
            <name>optvalue</name>
            <comment>The attribute value is used to specify a value for metadata elements. In elements using this attribute definition the value attribute is optional</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:attribute name="value" type="xsd:string"/>
	  </xsd:attributeGroup>

	  <xsd:attributeGroup name="speechAtts">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Attlist</type>
            <name>speechAtts</name>
            <comment>These attributes are used in speeches to identify actors and roles of speeches. In particular, attribute 'by' identifies the speaker, optional attribute 'as' identifies the role under which the speaker is speaking, and  optional attribute to identifies the addressee of the speech. All of them are references to person or organization elements in the references section</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:attribute name="by" type="xsd:anyURI" use="required"/>
		    <xsd:attribute name="as" type="xsd:anyURI"/>
		    <xsd:attribute name="to" type="xsd:anyURI"/>
	  </xsd:attributeGroup>

	  <xsd:attributeGroup name="show">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Attlist</type>
            <name>show</name>
            <comment>These attributes are used in metadata to propose visible representations of the metadata itself. Both a full visualization (attribute showAs) and an abbreviated one (attribute shortForm) can be specified</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:attribute name="showAs" type="xsd:string" use="required"/>
		    <xsd:attribute name="shortForm" type="xsd:string"/>
	  </xsd:attributeGroup>

	  <xsd:attributeGroup name="period">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Attlist</type>
            <name>period</name>
            <comment>These attributes are used in versioned content and metadata elements to indicate a period of time in which they were in force and/or in efficacy. Values are NOT dates, but references to event elements in the metadata section</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:attribute name="start" type="xsd:anyURI"/>
		    <xsd:attribute name="end" type="xsd:anyURI"/>
		    <xsd:attribute name="startEfficacy" type="xsd:anyURI"/>
		    <xsd:attribute name="endEfficacy" type="xsd:anyURI"/>
	  </xsd:attributeGroup>

	  <xsd:attributeGroup name="enactment">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Attlist</type>
            <name>enactment</name>
            <comment>These attributes are those already defined in attribute list "period", plus the attribute status, that allows to specify the status of the piece of text it wraps.</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:attributeGroup ref="period"/>
		    <xsd:attribute name="status" type="statusType"/>
	  </xsd:attributeGroup>

	  <xsd:attributeGroup name="modifiers">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Attlist</type>
            <name>modifiers</name>
            <comment>These attributes are used in the analysis of amendments to allow manifestation editors to specify whether the analysis is complete and/or ignored in the text</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:attribute name="exclusion" type="xsd:boolean"/>
		    <xsd:attribute name="incomplete" type="xsd:boolean"/>
	  </xsd:attributeGroup>

	  <xsd:attributeGroup name="role">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Attlist</type>
            <name>role</name>
            <comment>The attribute role is used to identify the role of an individual mentioned in the text. It is a reference to a person or organization element in the references section</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:attribute name="as" type="xsd:anyURI"/>
	  </xsd:attributeGroup>

	  <xsd:attributeGroup name="cellattrs">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Attlist</type>
            <name>cellattrs</name>
            <comment>These attributes are used to specify that table cells span more than one row or one column, exactly as in HTML</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:attribute name="rowspan" type="xsd:integer" default="1"/>
		    <xsd:attribute name="colspan" type="xsd:integer" default="1"/>
	  </xsd:attributeGroup>

	  <xsd:attributeGroup name="HTMLattrs">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Attlist</type>
            <name>HTMLattrs</name>
            <comment>These attributes are used to specify class, style and title of the element, exactly as in HTML</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:attribute name="class" type="xsd:string"/>
		    <xsd:attribute name="style" type="xsd:string"/>
		    <xsd:attribute name="title" type="xsd:string"/>
	  </xsd:attributeGroup>

	  <xsd:attributeGroup name="idreq">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Attlist</type>
            <name>idreq</name>
            <comment>This attribute identifies the element in an absolute manner. In elements using this attribute definition the id attribute is required</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:attribute name="id" type="xsd:ID" use="required"/>
	  </xsd:attributeGroup>

	  <xsd:attributeGroup name="idopt">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Attlist</type>
            <name>idopt</name>
            <comment>This attribute identifies the element in an absolute manner. In elements using this attribute definition the id attribute is optional</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:attribute name="id" type="xsd:ID"/>
	  </xsd:attributeGroup>

	  <xsd:attributeGroup name="refersreq">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Attlist</type>
            <name>refersreq</name>
            <comment>This attribute creates a connection between the element and an element of the Akoma Ntoso ontology to which it refers. In elements using this attribute definition the refersTo attribute is required</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:attribute name="refersTo" type="xsd:IDREF" use="required"/>
	  </xsd:attributeGroup>

	  <xsd:attributeGroup name="refers">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Attlist</type>
            <name>refers</name>
            <comment>This attribute creates a connection between the element and an element of the Akoma Ntoso ontology to which it refers. In elements using this attribute definition the refersTo attribute is optional</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:attribute name="refersTo" type="xsd:IDREF"/>
	  </xsd:attributeGroup>

	  <xsd:attributeGroup name="corereq">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Attlist</type>
            <name>corereq</name>
            <comment>This is the list of the core attributes that all elements in the content part of the document must have. In elements using this attribute definition the refersTo attribute is optional but the id attribute is required</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:attributeGroup ref="HTMLattrs"/>
		    <xsd:attributeGroup ref="enactment"/>
		    <xsd:attributeGroup ref="idreq"/>
		    <xsd:attributeGroup ref="refers"/>
	  </xsd:attributeGroup>

	  <xsd:attributeGroup name="corereqreq">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Attlist</type>
            <name>corereqreq</name>
            <comment>This is the list of the core attributes that all elements in the content part of the document must have. In elements using this attribute definition both the refersTo attribute and the id attribute are required</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:attributeGroup ref="HTMLattrs"/>
		    <xsd:attributeGroup ref="enactment"/>
		    <xsd:attributeGroup ref="idreq"/>
		    <xsd:attributeGroup ref="refersreq"/>
	  </xsd:attributeGroup>

	  <xsd:attributeGroup name="coreopt">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Attlist</type>
            <name>coreopt</name>
            <comment>This is the list of the core attributes that all elements in the content part of the document must have. In elements using this attribute definition both the refersTo attribute and the id attribute are optional</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:attributeGroup ref="HTMLattrs"/>
		    <xsd:attributeGroup ref="enactment"/>
		    <xsd:attributeGroup ref="idopt"/>
		    <xsd:attributeGroup ref="refers"/>
	  </xsd:attributeGroup>

	  <xsd:annotation>
		    <xsd:documentation>
		 =====================================================================
		
		Simple types (data values)
		
		===================================================================== 
		</xsd:documentation>
	  </xsd:annotation>

	  <xsd:simpleType name="versionType">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Simple</type>
            <name>versionType</name>
            <comment>This is the list of allowed values for the contains attribute</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:restriction base="xsd:string">
			      <xsd:enumeration value="originalVersion"/>
			      <xsd:enumeration value="singleVersion"/>
			      <xsd:enumeration value="multipleVersions"/>
		    </xsd:restriction>
	  </xsd:simpleType>

	  <xsd:simpleType name="eventType">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Simple</type>
            <name>eventType</name>
            <comment>This is the list of allowed values for the type attribute of the event and action elements</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:restriction base="xsd:string">
			      <xsd:enumeration value="generation"/>
			      <xsd:enumeration value="amendment"/>
			      <xsd:enumeration value="repeal"/>
		    </xsd:restriction>
	  </xsd:simpleType>

	  <xsd:simpleType name="statusType">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Simple</type>
            <name>statusType</name>
            <comment>This is the list of allowed values for the status attribute</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:restriction base="xsd:string">
			      <xsd:enumeration value="omissis"/>
			      <xsd:enumeration value="repealed"/>
			      <xsd:enumeration value="suspended"/>
			      <xsd:enumeration value="editorial"/>
		    </xsd:restriction>
	  </xsd:simpleType>

	  <xsd:simpleType name="remarkType">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Simple</type>
            <name>remarkType</name>
            <comment>This is the list of allowed values for the type attribute of the remark element</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:restriction base="xsd:string">
			      <xsd:enumeration value="sceneDescription"/>
			      <xsd:enumeration value="phenomenon"/>
			      <xsd:enumeration value="caption"/>
			      <xsd:enumeration value="translation"/>
		    </xsd:restriction>
	  </xsd:simpleType>

	  <xsd:simpleType name="timeType">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Simple</type>
            <name>timeType</name>
            <comment>This is the list of allowed values for the type attribute of the recordedTime element</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:restriction base="xsd:string">
			      <xsd:enumeration value="startEvent"/>
			      <xsd:enumeration value="endEvent"/>
		    </xsd:restriction>
	  </xsd:simpleType>

	  <xsd:simpleType name="outOfLineType">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Simple</type>
            <name>outOfLineType</name>
            <comment>This is the list of allowed values for the type attribute of the outOfLine element</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:restriction base="xsd:string">
			      <xsd:enumeration value="sideNote"/>
			      <xsd:enumeration value="publicationNote"/>
		    </xsd:restriction>
	  </xsd:simpleType>

	  <xsd:annotation>
		    <xsd:documentation>
		 =====================================================================
		
		Complex types (markup structures)
		
		===================================================================== 
		</xsd:documentation>
	  </xsd:annotation>

	  <xsd:complexType name="basehierarchy">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Complex</type>
            <name>basehierarchy</name>
            <comment>The complex type basehierarchy is not used by any element, but is derived by other types to contain the basic structure of hierarchical elements</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:sequence>
			      <xsd:element ref="num" minOccurs="0" maxOccurs="1"/>
			      <xsd:element ref="heading" minOccurs="0" maxOccurs="1"/>
			      <xsd:element ref="subheading" minOccurs="0" maxOccurs="1"/>
		    </xsd:sequence>
	  </xsd:complexType>

	  <xsd:complexType name="hierarchy">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Complex</type>
            <name>hierarchy</name>
            <comment>The complex type hierarchy is used by most or all the hierarchical elements of act-like documents.</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:complexContent>
			      <xsd:extension base="basehierarchy">
				        <xsd:choice>
					          <xsd:group ref="hierElements" minOccurs="1" maxOccurs="unbounded"/>
					          <xsd:element ref="content"/>
				        </xsd:choice>
				        <xsd:attributeGroup ref="corereq"/>
			      </xsd:extension>
		    </xsd:complexContent>
	  </xsd:complexType>

	  <xsd:complexType name="althierarchy">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Complex</type>
            <name>althierarchy</name>
            <comment>The complex type althierarchy is used by most or all the hierarchical elements of documents that are not act-like.</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:complexContent>
			      <xsd:extension base="basehierarchy">
				        <xsd:choice minOccurs="0" maxOccurs="unbounded">
					          <xsd:group ref="speechSection"/>
					          <xsd:group ref="containerElements"/>
				        </xsd:choice>
				        <xsd:attributeGroup ref="corereq"/>
			      </xsd:extension>
		    </xsd:complexContent>
	  </xsd:complexType>

	  <xsd:complexType name="blocksreq">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Complex</type>
            <name>blocksreq</name>
            <comment>the complex type blocksreq defines the content model and attributes shared by all containers. Here the id attribute is required</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:sequence minOccurs="1" maxOccurs="unbounded">
			      <xsd:group ref="blockElements"/>
		    </xsd:sequence>
		    <xsd:attributeGroup ref="corereq"/>
	  </xsd:complexType>

	  <xsd:complexType name="blocksopt">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Complex</type>
            <name>blocksopt</name>
            <comment>the complex type blocksopt defines the content model and attributes shared by all containers. Here the id attribute is optional</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:sequence minOccurs="1" maxOccurs="unbounded">
			      <xsd:group ref="blockElements"/>
		    </xsd:sequence>
		    <xsd:attributeGroup ref="coreopt"/>
	  </xsd:complexType>

	  <xsd:complexType name="inline" mixed="true">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Complex</type>
            <name>inline</name>
            <comment>the complex type inline defines the content model and attributes shared by all blocks and inlines. Here the id attribute is optional</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:choice minOccurs="0" maxOccurs="unbounded">
			      <xsd:group ref="inlineCM"/>
		    </xsd:choice>
		    <xsd:attributeGroup ref="coreopt"/>
	  </xsd:complexType>

	  <xsd:complexType name="inlinereq" mixed="true">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Complex</type>
            <name>inlinereq</name>
            <comment>the complex type inlinereq defines the content model and attributes shared by all blocks and inlines. Here the id attribute is required</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:choice minOccurs="0" maxOccurs="unbounded">
			      <xsd:group ref="inlineCM"/>
		    </xsd:choice>
		    <xsd:attributeGroup ref="corereq"/>
	  </xsd:complexType>

	  <xsd:complexType name="inlinereqreq" mixed="true">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Complex</type>
            <name>inlinereqreq</name>
            <comment>the complex type inlinereq defines the content model and attributes shared by all blocks and inlines. Here the id attribute is required and also the refersTo is required</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:choice minOccurs="0" maxOccurs="unbounded">
			      <xsd:group ref="inlineCM"/>
		    </xsd:choice>
		    <xsd:attributeGroup ref="corereqreq"/>
	  </xsd:complexType>

	  <xsd:complexType name="markerreq">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Complex</type>
            <name>markerreq</name>
            <comment>the complex type markerreq defines the content model and attributes shared by all marker elements. Here the id attribute is required</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:attributeGroup ref="corereq"/>
	  </xsd:complexType>

	  <xsd:complexType name="markeropt">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Complex</type>
            <name>markeropt</name>
            <comment>the complex type markeropt defines the content model and attributes shared by all marker elements. Here the id attribute is optional</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:attributeGroup ref="coreopt"/>
	  </xsd:complexType>

	  <xsd:complexType name="metareq">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Complex</type>
            <name>metareq</name>
            <comment>the complex type metareq defines the content model and attributes shared by all metadata elements. Here the id attribute is required</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:attributeGroup ref="idreq"/>
	  </xsd:complexType>

	  <xsd:complexType name="metaopt">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Complex</type>
            <name>metaopt</name>
            <comment>the complex type metaopt defines the content model and attributes shared by all metadata elements. Here the id attribute is optional</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:attributeGroup ref="idopt"/>
	  </xsd:complexType>

	  <xsd:complexType name="maincontent">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Complex</type>
            <name>maincontent</name>
            <comment>the complex type maincontent is used by container elements that can contain basically any other Akoma Ntoso structure</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:choice minOccurs="1" maxOccurs="unbounded">
			      <xsd:group ref="hierElements"/>
			      <xsd:group ref="blockElements"/>
			      <xsd:group ref="containerElements"/>
		    </xsd:choice>
		    <xsd:attributeGroup ref="coreopt"/>
	  </xsd:complexType>

	  <xsd:complexType name="speechType">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Complex</type>
            <name>speechType</name>
            <comment>the complex type speechType defines the content model and attributes shared by all speech elements. Here the id attribute is optional</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:sequence>
			      <xsd:element ref="from"/>
			      <xsd:sequence minOccurs="1" maxOccurs="unbounded">
				        <xsd:group ref="blockElements"/>
			      </xsd:sequence>
		    </xsd:sequence>
		    <xsd:attributeGroup ref="coreopt"/>
		    <xsd:attributeGroup ref="speechAtts"/>
	  </xsd:complexType>

	  <xsd:complexType name="referenceType">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Complex</type>
            <name>referenceType</name>
            <comment>the complex type referenceType defines the empty content model and the list of attributes for metadata elements in the references section</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:attributeGroup ref="idreq"/>
		    <xsd:attributeGroup ref="link"/>
		    <xsd:attributeGroup ref="show"/>
	  </xsd:complexType>

	  <xsd:complexType name="argumentType">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Complex</type>
            <name>argumentType</name>
            <comment>the complex type argumentType defines the empty content model and the list of attributes for metadata elements in the analysis section</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:attributeGroup ref="idopt"/>
		    <xsd:attributeGroup ref="link"/>
		    <xsd:attribute name="upTo" type="xsd:anyURI"/>
	  </xsd:complexType>

	  <xsd:complexType name="periodType">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Complex</type>
            <name>periodType</name>
            <comment>the complex type referenceType defines the empty content model and the list of attributes for metadata elements in the analysis section</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:attributeGroup ref="idopt"/>
		    <xsd:attributeGroup ref="period"/>
	  </xsd:complexType>

	  <xsd:complexType name="anyOtherType">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Complex</type>
            <name>anyOtherType</name>
            <comment>the complex type anyOtherType defines an open content model for elements that may use elements from other namespaces.</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:choice>
			      <xsd:any namespace="##other"/>
		    </xsd:choice>
		    <xsd:attributeGroup ref="idopt"/>
		    <xsd:attributeGroup ref="linkopt"/>
	  </xsd:complexType>

	  <xsd:annotation>
		    <xsd:documentation>
		 =====================================================================
		
		Root element
		Comment: One generic root element contains all document elements
		Pattern: Universal Root
		Reference: http://www.xmlpatterns.com/UniversalRootMain.shtml
		
		===================================================================== 
		</xsd:documentation>
	  </xsd:annotation>

	  <xsd:group name="legislativeDocs">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Group</type>
            <name>legislativeDocs</name>
            <comment>the group legislativeDocs specifies all the document types that are legislative in nature</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:choice>
			      <xsd:element ref="act"/>
			      <xsd:element ref="bill"/>
		    </xsd:choice>
	  </xsd:group>

	  <xsd:group name="judgementDocs">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Group</type>
            <name>judgementDocs</name>
            <comment>the group judgementDocs specifies all the document types that are jurisprudential in nature</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:sequence>
			      <xsd:element ref="judgement"/>
		    </xsd:sequence>
	  </xsd:group>

	  <xsd:group name="debateDocs">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Group</type>
            <name>debateDocs</name>
            <comment>the group debateDocs specifies all the document types that are related to debates</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:choice>
			      <xsd:element ref="report"/>
			      <xsd:element ref="debateRecord"/>
		    </xsd:choice>
	  </xsd:group>

	  <xsd:complexType name="documentType">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Complex</type>
            <name>documentType</name>
            <comment>the type documentType lists all the document types that are managed by Akoma Ntoso</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:choice>
			      <xsd:group ref="legislativeDocs"/>
			      <xsd:group ref="debateDocs"/>
			      <xsd:group ref="judgementDocs"/>
			      <xsd:element ref="doc"/>
		    </xsd:choice>
	  </xsd:complexType>

	  <xsd:element name="akomaNtoso" type="documentType">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Elementroot</type>
            <name>NAME</name>
            <comment>NAMEakomaNtosothe element akomaNtoso is the root element of all document types in Akoma Ntoso. It follows the pattern Universal Root (http://www.xmlpatterns.com/UniversalRootMain.shtml)</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:annotation>
		    <xsd:documentation>
		 =====================================================================
		
		Document elements
		Comment: All document elements share just two content models
		Pattern: Consistent Element Set
		Reference: http://www.xmlpatterns.com/ConsistentElementSetMain.shtml
		
		===================================================================== 
		</xsd:documentation>
	  </xsd:annotation>

	  <xsd:complexType name="hierarchicalStructure">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Complex</type>
            <name>hierarchicalStructure</name>
            <comment>the type hierarchicalStructure specifies the overall content model of the document types that are hierarchical in nature, especially acts and bills</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:sequence>
			      <xsd:element ref="meta"/>
			      <xsd:element ref="preface" minOccurs="0" maxOccurs="1"/>
			      <xsd:element ref="preamble" minOccurs="0" maxOccurs="1"/>
			      <xsd:element ref="body"/>
			      <xsd:element ref="conclusions" minOccurs="0" maxOccurs="1"/>
			      <xsd:element ref="outOfLines" minOccurs="0" maxOccurs="1"/>
			      <xsd:element ref="attachments" minOccurs="0" maxOccurs="1"/>
		    </xsd:sequence>
		    <xsd:attribute name="contains" type="versionType" default="originalVersion"/>
	  </xsd:complexType>

	  <xsd:complexType name="debateStructure">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Complex</type>
            <name>debateStructure</name>
            <comment>the type debateStructure specifies the overall content model of the document types that describe debates</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:sequence>
			      <xsd:element ref="meta"/>
			      <xsd:element ref="preface" minOccurs="0" maxOccurs="1"/>
			      <xsd:element ref="debate"/>
			      <xsd:element ref="conclusions" minOccurs="0" maxOccurs="1"/>
			      <xsd:element ref="outOfLines" minOccurs="0" maxOccurs="1"/>
			      <xsd:element ref="attachments" minOccurs="0" maxOccurs="1"/>
		    </xsd:sequence>
		    <xsd:attribute name="contains" type="versionType" default="originalVersion"/>
	  </xsd:complexType>

	  <xsd:complexType name="judgementStructure">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Complex</type>
            <name>judgementStructure</name>
            <comment>the type judgementStructure specifies the overall content model of the document types that describe judgements</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:sequence>
			      <xsd:element ref="meta"/>
			      <xsd:element ref="header"/>
			      <xsd:element ref="judgementBody"/>
			      <xsd:element ref="conclusions"/>
			      <xsd:element ref="outOfLines" minOccurs="0" maxOccurs="1"/>
			      <xsd:element ref="attachments" minOccurs="0" maxOccurs="1"/>
		    </xsd:sequence>
		    <xsd:attribute name="contains" type="versionType" default="originalVersion"/>
	  </xsd:complexType>

	  <xsd:complexType name="openStructure">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Complex</type>
            <name>openStructure</name>
            <comment>the type openStructure specifies the overall content model of all the document types that do not have a specific and peculiar structure</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:sequence>
			      <xsd:element ref="meta"/>
			      <xsd:element ref="preface" minOccurs="0" maxOccurs="1"/>
			      <xsd:element ref="preamble" minOccurs="0" maxOccurs="1"/>
			      <xsd:element ref="mainContent"/>
			      <xsd:element ref="conclusions" minOccurs="0" maxOccurs="1"/>
			      <xsd:element ref="outOfLines" minOccurs="0" maxOccurs="1"/>
			      <xsd:element ref="attachments" minOccurs="0" maxOccurs="1"/>
		    </xsd:sequence>
		    <xsd:attribute name="contains" type="versionType" default="originalVersion"/>
	  </xsd:complexType>

	  <xsd:element name="act" type="hierarchicalStructure">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>act</name>
            <comment>Element act is used for descriving the structure and content of an act</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="bill" type="hierarchicalStructure">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>bill</name>
            <comment>Element bill is used for descriving the structure and content of a bill</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="report" type="openStructure">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>report</name>
            <comment>Element report is used for descriving the structure and content of a report</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="debateRecord" type="debateStructure">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>debateRecord</name>
            <comment>Element debateRecord is used for descriving the structure and content of a debat record</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="judgement" type="judgementStructure">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>judgement</name>
            <comment>Element judgement is used for descriving the structure and content of a judgement</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="doc" type="openStructure">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>doc</name>
            <comment>Element doc is used for descriving the structure and content of any other rdocument that is not included in the list of document explicitly managed by Akoma Ntoso</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:annotation>
		    <xsd:documentation>
		 =====================================================================
		
		AN common containers elements
		
		===================================================================== 
		</xsd:documentation>
	  </xsd:annotation>

	  <xsd:element name="preface" type="blocksopt">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>preface</name>
            <comment>the element preface is used as a container of all prefacing material (e.g. headers, formulas, etc.)</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="preamble" type="blocksopt">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>preamble</name>
            <comment>the element preamble is used as a container of the text that opens the main body of the document as a preamble</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="conclusions" type="blocksopt">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>conclusions</name>
            <comment>the element conclusion is used as a container of all concluding material (e.g. dates, signatures, formulas, etc.)</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="header" type="blocksopt">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>header</name>
            <comment>the element header is used as a container of all prefacing material of judgements (e.g. headers, formulas, etc.)</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="attachments">
		    <xsd:complexType>
			      <xsd:sequence>
				        <xsd:element ref="attachment" minOccurs="1" maxOccurs="unbounded"/>
			      </xsd:sequence>
				     <xsd:attributeGroup ref="coreopt"/>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="attachment" type="referenceType">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>attachment</name>
            <comment>the element attachment is a reference (i.e., a URI) to another document of the same package that represents an attachment (such as a schedule, a table, etc.)</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="outOfLines">
		    <xsd:complexType>
			      <xsd:sequence>
				        <xsd:element ref="outOfLine" minOccurs="1" maxOccurs="unbounded"/>
			      </xsd:sequence>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="outOfLine">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>outOfLine</name>
            <comment>the element outOfLine is used as a container of material that is placed out of the main flow of the document (e.g. sidenotes)</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:complexType>
			      <xsd:complexContent>
				        <xsd:extension base="blocksreq">
					          <xsd:attributeGroup ref="link"/>
					          <xsd:attribute name="type" type="outOfLineType" use="required"/>
				        </xsd:extension>
			      </xsd:complexContent>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="body">
		    <xsd:complexType>
			      <xsd:sequence minOccurs="1" maxOccurs="unbounded">
				        <xsd:group ref="hierElements"/>
			      </xsd:sequence>
				     <xsd:attributeGroup ref="coreopt"/>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="debate">
		    <xsd:complexType>
			      <xsd:sequence minOccurs="1" maxOccurs="unbounded">
				        <xsd:group ref="speechSection"/>
			      </xsd:sequence>
				     <xsd:attributeGroup ref="coreopt"/>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="judgementBody">
		    <xsd:complexType>
			      <xsd:sequence minOccurs="1" maxOccurs="unbounded">
				        <xsd:group ref="judgementBlock"/>
			      </xsd:sequence>
				     <xsd:attributeGroup ref="coreopt"/>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="mainContent" type="maincontent">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>mainContent</name>
            <comment>the element mainContent is the container of the main part of all other document types</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:annotation>
		    <xsd:documentation>
		 =====================================================================
		
		Elements for hierarchical documents
		
		===================================================================== 
		</xsd:documentation>
	  </xsd:annotation>

	  <xsd:element name="section" type="hierarchy">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>section</name>
            <comment>this element is a hierarchical container called "section" either explicitly or due to the local radition</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="part" type="hierarchy">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>part</name>
            <comment>this element is a hierarchical container called "part" either explicitly or due to the local radition</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="paragraph" type="hierarchy">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>paragraph</name>
            <comment>this element is a hierarchical container called "paragraph" either explicitly or due to the local radition</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="chapter" type="hierarchy">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>chapter</name>
            <comment>this element is a hierarchical container called "chapter" either explicitly or due to the local radition</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="title" type="hierarchy">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>title</name>
            <comment>this element is a hierarchical container called "title" either explicitly or due to the local radition</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="book" type="hierarchy">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>book</name>
            <comment>this element is a hierarchical container called "book" either explicitly or due to the local radition</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="tome" type="hierarchy">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>tome</name>
            <comment>this element is a hierarchical container called "tome" either explicitly or due to the local radition</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="article" type="hierarchy">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>article</name>
            <comment>this element is a hierarchical container called "article" either explicitly or due to the local radition</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="clause" type="hierarchy">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>clause</name>
            <comment>this element is a hierarchical container called "clause" either explicitly or due to the local radition</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="subsection" type="hierarchy">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>subsection</name>
            <comment>this element is a hierarchical container called "subsection" either explicitly or due to the local radition</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="subpart" type="hierarchy">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>subpart</name>
            <comment>this element is a hierarchical container called "subpart" either explicitly or due to the local radition</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="subparagraph" type="hierarchy">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>subparagraph</name>
            <comment>this element is a hierarchical container called "subparagraph" either explicitly or due to the local radition</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="subchapter" type="hierarchy">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>subchapter</name>
            <comment>this element is a hierarchical container called "subchapter" either explicitly or due to the local radition</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="subtitle" type="hierarchy">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>subtitle</name>
            <comment>this element is a hierarchical container called "subtitle" either explicitly or due to the local radition</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="subclause" type="hierarchy">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>subclause</name>
            <comment>this element is a hierarchical container called "subclause" either explicitly or due to the local radition</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="content" type="blocksopt">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>content</name>
            <comment>the element content is the final container in a hierarchy, and is where the blocks of text of the content of the structure are finally specified</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="num" type="inline">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>num</name>
            <comment>the element num is a heading element in a hierarchy that contains a number or any other ordered mechanism to identify the structure.</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="heading" type="inline">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>heading</name>
            <comment>the element heading is a heading element in a hierarchy that contains a title or any other textual content to describe the structure.</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="subheading" type="inline">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>subheading</name>
            <comment>the element subheading is a heading element in a hierarchy that contains a subtitle or any other textual content to further describe the structure.</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:annotation>
		    <xsd:documentation>
		 =====================================================================
		
		Elements for debates documents
		
		===================================================================== 
		</xsd:documentation>
	  </xsd:annotation>

	  <xsd:element name="administrationOfOath" type="althierarchy">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>administrationOfOath</name>
            <comment>this element is a structural container for parts of a debates that are relevant to the administration of an oath</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="declarationOfVote" type="althierarchy">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>declarationOfVote</name>
            <comment>this element is a structural container for parts of a debates that are relevant to the declaration of votes</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="communication" type="althierarchy">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>communication</name>
            <comment>this element is a structural container for parts of a debates that are relevant to communications from the house</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="petitions" type="althierarchy">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>petitions</name>
            <comment>this element is a structural container for parts of a debates that are relevant to petitions</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="papers" type="althierarchy">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>papers</name>
            <comment>this element is a structural container for parts of a debates that are relevant to the display of papers</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="noticesOfMotion" type="althierarchy">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>noticesOfMotion</name>
            <comment>this element is a structural container for parts of a debates that are relevant to the notices of motions</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="questions" type="althierarchy">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>questions</name>
            <comment>this element is a structural container for parts of a debates that are relevant to questions</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="address" type="althierarchy">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>address</name>
            <comment>this element is a structural container for parts of a debates that are relevant to addresses</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="proceduralMotions" type="althierarchy">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>proceduralMotions</name>
            <comment>this element is a structural container for parts of a debates that are relevant to procedural motions</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="pointOfOrder" type="althierarchy">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>pointOfOrder</name>
            <comment>this element is a structural container for parts of a debates that are relevant to points of order</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="subdivision">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>subdivision</name>
            <comment>this element is a generic structural container for all other parts of a debates that are not explicitly supported with a named element</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:complexType>
			      <xsd:complexContent>
				        <xsd:extension base="althierarchy">
					          <xsd:attributeGroup ref="name"/>
				        </xsd:extension>
			      </xsd:complexContent>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="speech" type="speechType">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>speech</name>
            <comment>the element speech is a container of a single speech utterance in a debate. Dialogs between speakers need a speech element each</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="question" type="speechType">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>question</name>
            <comment>the element question is a container of a single official question as proposed by an MP to a peson holding an official position</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="answer" type="speechType">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>answer</name>
            <comment>the element answer is a container of a single official answer to a question</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="other" type="blocksopt">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>other</name>
            <comment>the element other is a container of parts of a debate that are not speeches, nor scene comments (e.g., lists of papers, etc.)</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="scene" type="inline">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>scene</name>
            <comment>the element scene is a container of descriptions of the scene elements happening in a given moment during a debate (e.g., applauses)</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="list">
		    <xsd:complexType>
			      <xsd:sequence>
				        <xsd:element ref="item" minOccurs="1" maxOccurs="unbounded"/>
			      </xsd:sequence>
				     <xsd:attributeGroup ref="corereq"/>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="from" type="inline">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>from</name>
            <comment>the element from is a heading element in a debate that contains the name or role or a reference to the person doing the speech</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="introduction" type="maincontent">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>introduction</name>
            <comment>this element is a structural container for the section of a judgement containing introductory material</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="background" type="maincontent">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>background</name>
            <comment>this element is a structural container for the section of a judgement containing the background</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="motivation" type="maincontent">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>motivation</name>
            <comment>this element is a structural container for the section of a judgement containing the motivation</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="decision" type="maincontent">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>decision</name>
            <comment>this element is a structural container for the section of a judgement containing the decision</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:annotation>
		    <xsd:documentation>
		 =====================================================================
		
		AN block elements
		Comment: the only AN-specific block are the table of content (TOC),
		a structure containing toc items related to the various subparts of the
		main document, the list item and the titled block
		
		===================================================================== 
		</xsd:documentation>
	  </xsd:annotation>

	  <xsd:complexType name="itemType">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Complex</type>
            <name>itemType</name>
            <comment>The complex type itemType is similar to a hierarchical element, but is isolated and does not belong to a full hierarchy.</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:complexContent>
			      <xsd:extension base="basehierarchy">
				        <xsd:sequence minOccurs="1" maxOccurs="unbounded">
					          <xsd:group ref="blockElements"/>
				        </xsd:sequence>
				        <xsd:attributeGroup ref="corereq"/>
			      </xsd:extension>
		    </xsd:complexContent>
	  </xsd:complexType>

	  <xsd:element name="tblock" type="itemType">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>tblock</name>
            <comment>The element tblock (titled block) is used to specify a container for blocks introduced by heading elements, similarly to a hierarchical structure</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:annotation>
		    <xsd:documentation>
		 The element item is a container belonging to a list 
		</xsd:documentation>
	  </xsd:annotation>

	  <xsd:element name="item" type="itemType"/>
		


	  <xsd:element name="toc">
		    <xsd:complexType>
			      <xsd:sequence>
				        <xsd:element ref="tocItem" minOccurs="1" maxOccurs="unbounded"/>
			      </xsd:sequence>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="tocItem">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>tocItem</name>
            <comment>the element tocItem is a component of the table of content and contains header information about sections or parts of the rest of the document</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:complexType mixed="true">
			      <xsd:complexContent>
				        <xsd:extension base="inline">
					          <xsd:attributeGroup ref="link"/>
					          <xsd:attribute name="level" type="xsd:integer" use="required"/>
				        </xsd:extension>
			      </xsd:complexContent>
		    </xsd:complexType>
	  </xsd:element>

	

	  <xsd:element name="docType" type="inline">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>docType</name>
            <comment>the element docType is an inline element within preface to identify the string used by the document for its own type</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="docTitle" type="inline">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>docTitle</name>
            <comment>the element docTitle is an inline element within preface to identify the string used by the document for its own title</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="docNumber" type="inline">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>docNumber</name>
            <comment>the element docNumber is an inline element within preface to identify the string used by the document for its own number</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="docProponent" type="inline">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>docProponent</name>
            <comment>the element docProponent is an inline element within preface to identify the string used by the document for its proponent</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="docDate">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>docDate</name>
            <comment>the element docDate is an inline element within preface to identify the string used by the document for its own date(s). Documents with multiple dates may use multiple docDate elements.</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:complexType mixed="true">
			      <xsd:complexContent>
				        <xsd:extension base="inline">
					          <xsd:attributeGroup ref="date"/>
				        </xsd:extension>
			      </xsd:complexContent>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="docPurpose" type="inline">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>docPurpose</name>
            <comment>the element docPurpose is an inline element within preface to identify the string used by the document detailing its own purpose</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="courtType" type="inline">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>courtType</name>
            <comment>the element courtType is an inline element within judgements to identify the string used by the document for the type of the court doing the judgement</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="neutralCitation" type="inline">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>neutralCitation</name>
            <comment>the element neutralCitation is an inline element within judgements to identify the string declared by the document as being the neutral citation for the judgement</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="party">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>party</name>
            <comment>the element party is an inline element within judgements to identify where the document defines one of the parties</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:complexType mixed="true">
			      <xsd:complexContent>
				        <xsd:extension base="inlinereqreq">
					          <xsd:attributeGroup ref="role"/>
				        </xsd:extension>
			      </xsd:complexContent>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="judge">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>judge</name>
            <comment>the element judge is an inline element within judgements to identify where the document defines one of the judges, and his/her role</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:complexType mixed="true">
			      <xsd:complexContent>
				        <xsd:extension base="inlinereqreq">
					          <xsd:attributeGroup ref="role"/>
				        </xsd:extension>
			      </xsd:complexContent>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="lawyer">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>lawyer</name>
            <comment>the element lawyer is an inline element within judgements to identify where the document defines one of the lawyers, his/her role, and which party it represents</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:complexType mixed="true">
			      <xsd:complexContent>
				        <xsd:extension base="inlinereqreq">
					          <xsd:attributeGroup ref="role"/>
					          <xsd:attribute name="represents" type="xsd:anyURI"/>
				        </xsd:extension>
			      </xsd:complexContent>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="opinion" type="inline">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>opinion</name>
            <comment>the element opinion is an inline element within judgements to identify where the document defines the opinion of one of the judges</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="signature" type="inline">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>signature</name>
            <comment>the element signature is an inline element within conclusions to identify where the document defines one of the signatures</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="date">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>date</name>
            <comment>the element date is an inline element to identify a date expressed in the text and to propose a normalized representation in the date attribute.</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:complexType mixed="true">
			      <xsd:complexContent>
				        <xsd:extension base="inline">
					          <xsd:attributeGroup ref="date"/>
				        </xsd:extension>
			      </xsd:complexContent>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="entity" type="inlinereqreq">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>entity</name>
            <comment>the element entity is an inline element to identify a text fragment introducing or referring to a concept in the ontology</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="ref">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>ref</name>
            <comment>the element ref is an inline element containing a legal references (i.e. a reference to a document with legal status and for which an Akoma Ntoso URI exists)</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:complexType mixed="true">
			      <xsd:complexContent>
				        <xsd:extension base="inlinereq">
					          <xsd:attributeGroup ref="link"/>
				        </xsd:extension>
			      </xsd:complexContent>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="mref" type="inline">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>mref</name>
            <comment>the element mref is an inline element containing multiple references (each in turn represented by a ref element)</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="rref">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>rref</name>
            <comment>the element rref is an inline element containing a range of references between the URI specified in the href attribute and the one specified in the upTo attribute.</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:complexType mixed="true">
			      <xsd:complexContent>
				        <xsd:extension base="inlinereq">
					          <xsd:attributeGroup ref="link"/>
					          <xsd:attribute name="upTo" type="xsd:anyURI" use="required"/>
				        </xsd:extension>
			      </xsd:complexContent>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:complexType name="modType" mixed="true">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Complex</type>
            <name>modType</name>
            <comment>the complex type modType specifies the content that is allowed within mod, mmod and rmod elements, i.e. it adds quotedText and quotedStructure to the normal list of inline elements</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:choice minOccurs="0" maxOccurs="unbounded">
			      <xsd:group ref="inlineCM"/>
			      <xsd:element ref="quotedText"/>
			      <xsd:element ref="quotedStructure"/>
		    </xsd:choice>
		    <xsd:attributeGroup ref="corereq"/>
	  </xsd:complexType>

	  <xsd:element name="mod" type="modType">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>mod</name>
            <comment>the element mod is an inline element containing the specification of a modification on another document</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="mmod" type="modType">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>mmod</name>
            <comment>the element mmod is an inline element containing multiple specifications of modifications on another document</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="rmod">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>rmod</name>
            <comment>the element rmod is an inline element containing the specification of a range of modifications on another document</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:complexType mixed="true">
			      <xsd:complexContent>
				        <xsd:extension base="modType">
					          <xsd:attribute name="upTo" type="xsd:anyURI" use="required"/>
				        </xsd:extension>
			      </xsd:complexContent>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="quotedText" type="inline">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>quotedText</name>
            <comment>the element quotedText is an inline element containing a small string that is used either as the text being replaced, or the replacement, or the positioning at which some modification should take place.</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="quotedStructure">
		    <xsd:complexType>
			      <xsd:choice minOccurs="1" maxOccurs="unbounded">
				        <xsd:group ref="hierElements"/>
				        <xsd:group ref="blockElements"/>
				        <xsd:group ref="containerElements"/>
			      </xsd:choice>
				     <xsd:attributeGroup ref="corereq"/>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="def" type="inline">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>def</name>
            <comment>the element def is an inline element used for the definition of a term used in the rest of the document</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="remark">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>remark</name>
            <comment>the element remark is an inline element for the specification of editorial remarks (e.g., applauses, laughters, etc.) especially within debate records</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:complexType mixed="true">
			      <xsd:complexContent>
				        <xsd:extension base="inline">
					          <xsd:attribute name="type" type="remarkType"/>
				        </xsd:extension>
			      </xsd:complexContent>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="ins" type="inline">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>ins</name>
            <comment>the element ins is an inline element for the specification of editorial insertions</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="del" type="inline">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>del</name>
            <comment>the element del is an inline element for the specification of editorial deletions</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="omissis" type="inline">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>omissis</name>
            <comment>the element omissis is an inline element for the specification of a text that substitues a textual omission (e.g., dots, spaces, the word "omissis", etc.</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="noteRef">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>noteRef</name>
            <comment>the element noteRef is a reference to a editorial note placed in the notes metadata section</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:complexType>
			      <xsd:complexContent>
				        <xsd:extension base="markeropt">
					          <xsd:attributeGroup ref="link"/>
					          <xsd:attribute name="num" type="xsd:string" use="required"/>
				        </xsd:extension>
			      </xsd:complexContent>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="recordedTime">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>recordedTime</name>
            <comment>the element recordedTime is an inline element for the specification of an explicit mention of a time (e.g., in a debate)</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:complexType>
			      <xsd:complexContent>
				        <xsd:extension base="markeropt">
					          <xsd:attribute name="type" type="timeType"/>
					          <xsd:attributeGroup ref="time"/>
				        </xsd:extension>
			      </xsd:complexContent>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:complexType name="eolType">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Complex</type>
            <name>eolType</name>
            <comment>the complex type eolType is shared by eol and eop elements as being able to specify a position within the next word in which the break can happen</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:complexContent>
			      <xsd:extension base="markeropt">
				        <xsd:attribute name="breakat" type="xsd:integer"/>
			      </xsd:extension>
		    </xsd:complexContent>
	  </xsd:complexType>

	  <xsd:element name="eol" type="eolType">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>eol</name>
            <comment>the element eol (end of line) is a marker for where in the original text the line breaks. If the line breaks within a word, place the element BEFORE the word and place the number of characters before the break in the attribute breakat</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="eop" type="eolType">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>eop</name>
            <comment>the element eop (end of page) is a marker for where in the original text the page breaks. Do NOT use a eol element, too. If the page breaks within a word, place the element BEFORE the word and place the number of characters before the break in the attribute breakat</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:annotation>
		    <xsd:documentation>
		 =====================================================================
		
		Generic elements
		Comment: All elements in this schema fall under one of five
		content models: hierarchical container, container, block, inline
		and mark. Besides named elements, the schema also provides for a
		generic element for each of them, that can be used for markup that
		fits the content models but can be specified by a precise name that
		is not used in this schema. The 'name' attribute must be used for
		naming the element.
		It is also a characteristic of this schema that all named elements
		are equivalent, and can be substituted to, the corresponding generic
		element with their name as the value of the name attribute. Thus, by
		definition, &lt;p&gt;  = &lt;block name="p"&gt; , &lt;part&gt;  = &lt;hcontainer name="part"&gt; ,
		&lt;act&gt;  = &lt;container name="act"&gt; , etc.
		Pattern: Generic Document + Role Attribute
		Reference: http://www.xmlpatterns.com/GenericDocumentMain.shtml +
		http://www.xmlpatterns.com/RoleAttributeMain.shtml
		
		===================================================================== 
		</xsd:documentation>
	  </xsd:annotation>

	  <xsd:element name="hcontainer">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>hcontainer</name>
            <comment>the element hcontainer is a generic element for a hierarchical container. It can be placed in a hierarchy instead of any of the other hierarchical containers. The attribute name is required and gives a name to the element.</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:complexType>
			      <xsd:complexContent>
				        <xsd:extension base="hierarchy">
					          <xsd:attributeGroup ref="name"/>
				        </xsd:extension>
			      </xsd:complexContent>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="container">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>container</name>
            <comment>the element container is a generic element for a container. It can be placed in a container instead of any of the other containers. The attribute name is required and gives a name to the element.</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:complexType>
			      <xsd:complexContent>
				        <xsd:extension base="blocksreq">
					          <xsd:attributeGroup ref="name"/>
				        </xsd:extension>
			      </xsd:complexContent>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="block">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>block</name>
            <comment>the element block is a generic element for a container. It can be placed in a container instead of any of the other blocks. The attribute name is required and gives a name to the element.</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:complexType mixed="true">
			      <xsd:complexContent>
				        <xsd:extension base="inline">
					          <xsd:attributeGroup ref="name"/>
				        </xsd:extension>
			      </xsd:complexContent>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="inline">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>inline</name>
            <comment>the element inline is a generic element for an inline. It can be placed inside a block instead of any of the other inlines. The attribute name is required and gives a name to the element.</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:complexType mixed="true">
			      <xsd:complexContent>
				        <xsd:extension base="inline">
					          <xsd:attributeGroup ref="name"/>
				        </xsd:extension>
			      </xsd:complexContent>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="marker">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>marker</name>
            <comment>the element marker is a generic element for a marker. It can be placed in a block instead of any of the other markers. The attribute name is required and gives a name to the element.</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:complexType>
			      <xsd:complexContent>
				        <xsd:extension base="markerreq">
					          <xsd:attributeGroup ref="name"/>
				        </xsd:extension>
			      </xsd:complexContent>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="foreign" type="anyOtherType">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>foreign</name>
            <comment>the element foreign is a generic container for elements not belonging to the Akoma Ntoso (e.g., mathematical formulas). It is an inline element and thus can be placed in a block.</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:annotation>
		    <xsd:documentation>
		 =====================================================================
		
		HTML elements
		Comment: Many elements are drawn directly from HTML 4.0
		Pattern: Reuse Document Types (partial)
		Reference: http://www.xmlpatterns.com/ReuseDocumentTypesMain.shtml
		
		===================================================================== 
		</xsd:documentation>
	  </xsd:annotation>

	  <xsd:element name="div" type="blocksreq">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>div</name>
            <comment>The element div is an HTML element, but is NOT used in Akoma Ntoso as in HTML. Instead of being used as a generic block, Akoma Ntoso uses div as a generic container (as in common practice)</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="p" type="inline">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>p</name>
            <comment>The element p is an HTML element and is used in Akoma Ntoso as in HTML, for the generic paragraph of text (a block)</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="li">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>li</name>
            <comment>TYPEElementNAMEliThe element li is an HTML element and is used in Akoma Ntoso as in HTML, for the generic list item (not a pattern)</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:complexType mixed="true">
			      <xsd:choice minOccurs="0" maxOccurs="unbounded">
				        <xsd:group ref="inlineCM"/>
				        <xsd:element ref="ul"/>
				        <xsd:element ref="ol"/>
				        <xsd:element ref="p"/>
			      </xsd:choice>
				     <xsd:attributeGroup ref="optvalue"/>
				     <xsd:attributeGroup ref="coreopt"/>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="span" type="inline">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>span</name>
            <comment>The element span is an HTML element and is used in Akoma Ntoso as in HTML, for the generic inline</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="b" type="inline">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>b</name>
            <comment>The element b is an HTML element and is used in Akoma Ntoso as in HTML, for the bold style (an inline)</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="i" type="inline">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>i</name>
            <comment>The element i is an HTML element and is used in Akoma Ntoso as in HTML, for the italic style (an inline)</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="a">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>a</name>
            <comment>The element a is an HTML element and is used in Akoma Ntoso as in HTML, for the generic link to a web resource (NOT to an Akoma Ntoso document: use ref for that). It is an inline.</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:complexType mixed="true">
			      <xsd:complexContent>
				        <xsd:extension base="inline">
					          <xsd:attributeGroup ref="link"/>
					          <xsd:attribute name="target" type="xsd:string"/>
				        </xsd:extension>
			      </xsd:complexContent>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="img">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>img</name>
            <comment>The element img is an HTML element and is used in Akoma Ntoso as in HTML, for including an image. It is a marker.</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:complexType>
			      <xsd:complexContent>
				        <xsd:extension base="markeropt">
					          <xsd:attribute name="src" type="xsd:anyURI" use="required"/>
					          <xsd:attribute name="alt" type="xsd:string"/>
					          <xsd:attribute name="width" type="xsd:integer"/>
					          <xsd:attribute name="height" type="xsd:integer"/>
				        </xsd:extension>
			      </xsd:complexContent>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:complexType name="listItems">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Complex</type>
            <name>listItems</name>
            <comment>the complex type listItems specifies the content model of elements ul and ol, and specifies just a sequence of list items (elements li).</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:sequence>
			      <xsd:element ref="li" minOccurs="1" maxOccurs="unbounded"/>
		    </xsd:sequence>
		    <xsd:attributeGroup ref="corereq"/>
	  </xsd:complexType>

	  <xsd:element name="ul" type="listItems">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>ul</name>
            <comment>The element ul is an HTML element and is used in Akoma Ntoso as in HTML, for an unordered list of list item (elements li)</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="ol" type="listItems">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>ol</name>
            <comment>The element ol is an HTML element and is used in Akoma Ntoso as in HTML, for an ordered list of list item (elements li)</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="table">
		    <xsd:complexType>
			      <xsd:sequence>
				        <xsd:element ref="tr" minOccurs="1" maxOccurs="unbounded"/>
			      </xsd:sequence>
				     <xsd:attributeGroup ref="corereq"/>
				     <xsd:attribute name="width" type="xsd:integer"/>
				     <xsd:attribute name="border" type="xsd:integer"/>
				     <xsd:attribute name="cellspacing" type="xsd:integer"/>
				     <xsd:attribute name="cellpadding" type="xsd:integer"/>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="tr">
		    <xsd:complexType>
			      <xsd:choice minOccurs="1" maxOccurs="unbounded">
				        <xsd:element ref="th"/>
				        <xsd:element ref="td"/>
			      </xsd:choice>
				     <xsd:attributeGroup ref="corereq"/>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="th">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>th</name>
            <comment>The element th is an HTML element and is used in Akoma Ntoso as in HTML, for a header cell of a table</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:complexType mixed="true">
			      <xsd:complexContent>
				        <xsd:extension base="inline">
					          <xsd:attributeGroup ref="cellattrs"/>
				        </xsd:extension>
			      </xsd:complexContent>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="td">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>td</name>
            <comment>The element td is an HTML element and is used in Akoma Ntoso as in HTML, for a data cell of a table</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:complexType mixed="true">
			      <xsd:complexContent>
				        <xsd:extension base="inline">
					          <xsd:attributeGroup ref="cellattrs"/>
				        </xsd:extension>
			      </xsd:complexContent>
		    </xsd:complexType>
	  </xsd:element>

	

	  <xsd:element name="meta">
		    <xsd:complexType>
			      <xsd:sequence>
				        <xsd:element ref="identification"/>
				        <xsd:element ref="publication"/>
				        <xsd:element ref="classification" minOccurs="0" maxOccurs="unbounded"/>
				        <xsd:element ref="lifecycle" minOccurs="0" maxOccurs="unbounded"/>
				        <xsd:element ref="workflow" minOccurs="0" maxOccurs="unbounded"/>
				        <xsd:element ref="analysis" minOccurs="0" maxOccurs="unbounded"/>
				        <xsd:element ref="references" minOccurs="0" maxOccurs="unbounded"/>
				        <xsd:element ref="notes" minOccurs="0" maxOccurs="unbounded"/>
				        <xsd:element ref="proprietary" minOccurs="0" maxOccurs="unbounded"/>
			      </xsd:sequence>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="identification">
		    <xsd:complexType>
			      <xsd:sequence>
				        <xsd:element ref="FRBRWork"/>
				        <xsd:element ref="FRBRExpression"/>
				        <xsd:element ref="FRBRManifestation"/>
				        <xsd:element ref="FRBRItem" minOccurs="0" maxOccurs="1"/>
			      </xsd:sequence>
				     <xsd:attributeGroup ref="source"/>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:complexType name="coreProperties">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Complex</type>
            <name>coreProperties</name>
            <comment>The complexType corePropetties lists the identifying properties available at any of the FRBR hierarchy levels.</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:sequence>
			      <xsd:element ref="FRBRthis"/>
			      <xsd:element ref="FRBRuri" minOccurs="1" maxOccurs="unbounded"/>
			      <xsd:element ref="FRBRalias" minOccurs="0" maxOccurs="unbounded"/>
			      <xsd:element ref="FRBRdate"/>
			      <xsd:element ref="FRBRauthor" minOccurs="1" maxOccurs="unbounded"/>
			      <xsd:element ref="components" minOccurs="0" maxOccurs="1"/>
			      <xsd:element ref="preservation" minOccurs="0" maxOccurs="1"/>
		    </xsd:sequence>
	  </xsd:complexType>

	  <xsd:element name="FRBRWork" type="coreProperties">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>FRBRWork</name>
            <comment>The element FRBRWork is the metadata container of identifying properties related to the Work level according to the FRBR hierarchy</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="FRBRExpression" type="coreProperties">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>FRBRExpression</name>
            <comment>The element FRBRExpression is the metadata container of identifying properties related to the Expression level according to the FRBR hierarchy</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="FRBRManifestation" type="coreProperties">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>FRBRManifestation</name>
            <comment>The element FRBRManifestation is the metadata container of identifying properties related to the Manifestation level according to the FRBR hierarchy</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="FRBRItem" type="coreProperties">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>FRBRItem</name>
            <comment>The element FRBRItem is the metadata container of identifying properties related to the Item level according to the FRBR hierarchy.</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="FRBRthis">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>FRBRthis</name>
            <comment>The element FRBRthis is the metadata property containing the URI of the specific component of the document in the respective level of the FRBR hierarchy</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:complexType>
			      <xsd:complexContent>
				        <xsd:extension base="metaopt">
					          <xsd:attributeGroup ref="value"/>
				        </xsd:extension>
			      </xsd:complexContent>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="FRBRuri">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>FRBRuri</name>
            <comment>The element FRBRuri is the metadata property containing the URI of the whole document in the respective level of the FRBR hierarchy</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:complexType>
			      <xsd:complexContent>
				        <xsd:extension base="metaopt">
					          <xsd:attributeGroup ref="value"/>
				        </xsd:extension>
			      </xsd:complexContent>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="FRBRalias">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>FRBRalias</name>
            <comment>The element FRBRalias is the metadata property containing additional well-known names of the document in the respective level of the FRBR hierarchy</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:complexType>
			      <xsd:complexContent>
				        <xsd:extension base="metaopt">
					          <xsd:attributeGroup ref="value"/>
				        </xsd:extension>
			      </xsd:complexContent>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="FRBRdate">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>FRBRdate</name>
            <comment>The element FRBRdate is the metadata property containing a relevant date of the document in the respective level of the FRBR hierarchy. Attribute name specifies which actual date is contained here.</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:complexType>
			      <xsd:complexContent>
				        <xsd:extension base="metaopt">
					          <xsd:attributeGroup ref="date"/>
					          <xsd:attributeGroup ref="name"/>
				        </xsd:extension>
			      </xsd:complexContent>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="FRBRauthor">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>FRBRauthor</name>
            <comment>The element FRBRauthor is the metadata property containing a relevant author of the document in the respective level of the FRBR hierarchy. Attribute as specifies the roleof the author.</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:complexType>
			      <xsd:complexContent>
				        <xsd:extension base="metaopt">
					          <xsd:attributeGroup ref="link"/>
					          <xsd:attribute name="as" type="xsd:anyURI"/>
				        </xsd:extension>
			      </xsd:complexContent>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="components">
		    <xsd:complexType>
			      <xsd:sequence minOccurs="0" maxOccurs="unbounded">
				        <xsd:element ref="component"/>
			      </xsd:sequence>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="component">
		    <xsd:complexType>
			      <xsd:sequence minOccurs="0" maxOccurs="unbounded">
				        <xsd:element ref="component"/>
			      </xsd:sequence>
				     <xsd:attributeGroup ref="idreq"/>
				     <xsd:attributeGroup ref="name"/>
				     <xsd:attributeGroup ref="link"/>
				     <xsd:attributeGroup ref="show"/>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="preservation" type="anyOtherType">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>preservation</name>
            <comment>The element preservation is the metadata property containing an arbitrary list of elements detailing the preservation actions taken for the document is the respective level of the FRBR hierarchy..</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="publication">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>publication</name>
            <comment>The element publication is the metadata container specifying a publication event for the FRBR expression of the document.</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:complexType>
			      <xsd:complexContent>
				        <xsd:extension base="metaopt">
					          <xsd:attributeGroup ref="date"/>
					          <xsd:attributeGroup ref="show"/>
					          <xsd:attributeGroup ref="name"/>
					          <xsd:attributeGroup ref="refers"/>
				        </xsd:extension>
			      </xsd:complexContent>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="classification">
		    <xsd:complexType>
			      <xsd:sequence>
				        <xsd:element ref="keyword" minOccurs="1" maxOccurs="unbounded"/>
			      </xsd:sequence>
				     <xsd:attributeGroup ref="source"/>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="keyword">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>keyword</name>
            <comment>The element keyword is a metadata element specifying a keyword  associated to the FRBR expression of the document. Attribute dictionary (required) specifies the thesaurus out of which the keyword has been taken.</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:complexType>
			      <xsd:complexContent>
				        <xsd:extension base="metaopt">
					          <xsd:attributeGroup ref="value"/>
					          <xsd:attributeGroup ref="show"/>
					          <xsd:attribute name="dictionary" type="xsd:anyURI" use="required"/>
				        </xsd:extension>
			      </xsd:complexContent>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="lifecycle">
		    <xsd:complexType>
			      <xsd:sequence>
				        <xsd:element ref="event" minOccurs="1" maxOccurs="unbounded"/>
			      </xsd:sequence>
				     <xsd:attributeGroup ref="source"/>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="event">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>event</name>
            <comment>The element event is a metadata element specifying facts about an event that had an effect on the document. For each event, a date, a type and a document that generated the event must be referenced.</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:complexType>
			      <xsd:complexContent>
				        <xsd:extension base="metareq">
					          <xsd:attributeGroup ref="date"/>
					          <xsd:attributeGroup ref="source"/>
					          <xsd:attribute name="type" type="eventType"/>
				        </xsd:extension>
			      </xsd:complexContent>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="workflow">
		    <xsd:complexType>
			      <xsd:sequence>
				        <xsd:element ref="action" minOccurs="1" maxOccurs="unbounded"/>
			      </xsd:sequence>
				     <xsd:attributeGroup ref="source"/>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="action">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>action</name>
            <comment>The element action is a metadata element specifying facts about a workflow action occurred to the document. For each event, a date, a type, an actor (and the corresponding role) that generated the action must be referenced.</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:complexType>
			      <xsd:complexContent>
				        <xsd:extension base="metareq">
					          <xsd:attributeGroup ref="date"/>
					          <xsd:attributeGroup ref="source"/>
					          <xsd:attributeGroup ref="role"/>
					          <xsd:attribute name="type" type="eventType"/>
				        </xsd:extension>
			      </xsd:complexContent>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="analysis">
		    <xsd:complexType>
			      <xsd:sequence>
				        <xsd:element ref="activeModifications" minOccurs="0" maxOccurs="1"/>
				        <xsd:element ref="passiveModifications" minOccurs="0" maxOccurs="1"/>
			      </xsd:sequence>
				     <xsd:attributeGroup ref="source"/>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:complexType name="Amendments">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Complex</type>
            <name>Amendments</name>
            <comment>The complex type Amendments is a list of all the amendment elements that can be used on a document analysis</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:choice minOccurs="1" maxOccurs="unbounded">
			      <xsd:element ref="textualMod"/>
			      <xsd:element ref="meaningMod"/>
			      <xsd:element ref="scopeMod"/>
			      <xsd:element ref="forceMod"/>
			      <xsd:element ref="efficacyMod"/>
			      <xsd:element ref="legalSystemMod"/>
		    </xsd:choice>
	  </xsd:complexType>

	  <xsd:complexType name="modificationType">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Complex</type>
            <name>modificationType</name>
            <comment>The complex type modificationType lists all the properties associated to modification elements.</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:sequence>
			      <xsd:element ref="source" minOccurs="1" maxOccurs="unbounded"/>
			      <xsd:element ref="destination" minOccurs="1" maxOccurs="unbounded"/>
			      <xsd:element ref="force" minOccurs="0" maxOccurs="1"/>
			      <xsd:element ref="efficacy" minOccurs="0" maxOccurs="1"/>
			      <xsd:element ref="application" minOccurs="0" maxOccurs="1"/>
			      <xsd:element ref="duration" minOccurs="0" maxOccurs="1"/>
			      <xsd:element ref="condition" minOccurs="0" maxOccurs="1"/>
		    </xsd:sequence>
		    <xsd:attributeGroup ref="idreq"/>
		    <xsd:attributeGroup ref="enactment"/>
		    <xsd:attributeGroup ref="modifiers"/>
		    <xsd:attributeGroup ref="refers"/>
	  </xsd:complexType>

	  <xsd:simpleType name="TextualMods">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Simple</type>
            <name>TextualMods</name>
            <comment>The simple type TextualMods lists all the types of textual modifications as values for the type attribute of the textualMod element.</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:restriction base="xsd:string">
			      <xsd:enumeration value="repeal"/>
			      <xsd:enumeration value="substitution"/>
			      <xsd:enumeration value="insertion"/>
			      <xsd:enumeration value="replacement"/>
			      <xsd:enumeration value="renumbering"/>
		    </xsd:restriction>
	  </xsd:simpleType>

	  <xsd:simpleType name="MeaningMods">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Simple</type>
            <name>MeaningMods</name>
            <comment>The simple type MeaningMods lists all the types of modifications in meaning as values for the type attribute of the meaningMod element.</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:restriction base="xsd:string">
			      <xsd:enumeration value="variation"/>
			      <xsd:enumeration value="termModification"/>
			      <xsd:enumeration value="authenticInterpretation"/>
		    </xsd:restriction>
	  </xsd:simpleType>

	  <xsd:simpleType name="ScopeMods">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Simple</type>
            <name>ScopeMods</name>
            <comment>The simple type ScopeMods lists all the types of modifications in scope as values for the type attribute of the scopeMod element.</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:restriction base="xsd:string">
			      <xsd:enumeration value="exceptionOfScope"/>
			      <xsd:enumeration value="extensionOfScope"/>
		    </xsd:restriction>
	  </xsd:simpleType>

	  <xsd:simpleType name="ForceMods">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Simple</type>
            <name>ForceMods</name>
            <comment>The simple type ForceMods lists all the types of modifications in force as values for the type attribute of the forceMod element.</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:restriction base="xsd:string">
			      <xsd:enumeration value="entryIntoForce"/>
			      <xsd:enumeration value="endOfEnactment"/>
			      <xsd:enumeration value="postponementOfEntryIntoForce"/>
			      <xsd:enumeration value="prorogationOfForce"/>
			      <xsd:enumeration value="reEnactment"/>
			      <xsd:enumeration value="uncostitutionality"/>
		    </xsd:restriction>
	  </xsd:simpleType>

	  <xsd:simpleType name="EfficacyMods">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Simple</type>
            <name>EfficacyMods</name>
            <comment>The simple type Efficacymods lists all the types of modifications in efficacy as values for the type attribute of the efficacyMod element.</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:restriction base="xsd:string">
			      <xsd:enumeration value="entryIntoEfficacy"/>
			      <xsd:enumeration value="endOfEfficacy"/>
			      <xsd:enumeration value="inapplication"/>
			      <xsd:enumeration value="retroactivity"/>
			      <xsd:enumeration value="extraefficacy"/>
			      <xsd:enumeration value="postponementOfEfficacy"/>
			      <xsd:enumeration value="prorogationOfEfficacy"/>
		    </xsd:restriction>
	  </xsd:simpleType>

	  <xsd:simpleType name="LegalSystemMods">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Simple</type>
            <name>LegalSystemMods</name>
            <comment>The simple type LegalSystemMods lists all the types of modifications in the legal system as values for the type attribute of the LegalSystemMod element.</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:restriction base="xsd:string">
			      <xsd:enumeration value="staticReference"/>
			      <xsd:enumeration value="implementation"/>
			      <xsd:enumeration value="ratification"/>
			      <xsd:enumeration value="application"/>
			      <xsd:enumeration value="legislativeDelegation"/>
			      <xsd:enumeration value="deregulation"/>
			      <xsd:enumeration value="conversion"/>
			      <xsd:enumeration value="expiration"/>
			      <xsd:enumeration value="reiteration"/>
			      <xsd:enumeration value="remaking"/>
			      <xsd:enumeration value="republication"/>
			      <xsd:enumeration value="coordination"/>
		    </xsd:restriction>
	  </xsd:simpleType>

	  <xsd:element name="activeModifications" type="Amendments">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>activeModifications</name>
            <comment>The element activeModifications is a metadata container of the active modifications generated by the document.</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="passiveModifications" type="Amendments">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>passiveModifications</name>
            <comment>The element passiveModifications is a metadata container of the passive modifications affecting the document.</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="textualMod">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>textualMod</name>
            <comment>The element textualMod is a metadata element specifying an (active or passive) textual modification for the document.</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:complexType>
			      <xsd:complexContent>
				        <xsd:extension base="modificationType">
					          <xsd:sequence>
						            <xsd:element ref="old" minOccurs="0" maxOccurs="1"/>
						            <xsd:element ref="new" minOccurs="0" maxOccurs="1"/>
					          </xsd:sequence>
					          <xsd:attribute name="type" type="TextualMods" use="required"/>
				        </xsd:extension>
			      </xsd:complexContent>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="meaningMod">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>meaningMod</name>
            <comment>The element meaningMod is a metadata element specifying an (active or passive) modification in meaning for the document.</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:complexType>
			      <xsd:complexContent>
				        <xsd:extension base="modificationType">
					          <xsd:sequence>
						            <xsd:element ref="domain" minOccurs="0" maxOccurs="1"/>
					          </xsd:sequence>
					          <xsd:attribute name="type" type="MeaningMods" use="required"/>
				        </xsd:extension>
			      </xsd:complexContent>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="scopeMod">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>scopeMod</name>
            <comment>The element scopeMod is a metadata element specifying an (active or passive) modification in scope for the document.</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:complexType>
			      <xsd:complexContent>
				        <xsd:extension base="modificationType">
					          <xsd:sequence>
						            <xsd:element ref="domain" minOccurs="0" maxOccurs="1"/>
					          </xsd:sequence>
					          <xsd:attribute name="type" type="ScopeMods" use="required"/>
				        </xsd:extension>
			      </xsd:complexContent>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="forceMod">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>forceMod</name>
            <comment>The element forceMod is a metadata element specifying an (active or passive) modification in force for the document.</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:complexType>
			      <xsd:complexContent>
				        <xsd:extension base="modificationType">
					          <xsd:attribute name="type" type="ForceMods" use="required"/>
				        </xsd:extension>
			      </xsd:complexContent>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="efficacyMod">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>efficacyMod</name>
            <comment>The element efficacyMod is a metadata element specifying an (active or passive) modification in efficacy for the document.</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:complexType>
			      <xsd:complexContent>
				        <xsd:extension base="modificationType">
					          <xsd:attribute name="type" type="EfficacyMods" use="required"/>
				        </xsd:extension>
			      </xsd:complexContent>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="legalSystemMod">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>legalSystemMod</name>
            <comment>The element legalSystemMod is a metadata element specifying an (active or passive) modification in the legal system for the document.</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:complexType>
			      <xsd:complexContent>
				        <xsd:extension base="modificationType">
					          <xsd:attribute name="type" type="LegalSystemMods" use="required"/>
				        </xsd:extension>
			      </xsd:complexContent>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="source" type="argumentType">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>source</name>
            <comment>The element source is a metadata element specifying the URI of the source of the modification.</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="destination" type="argumentType">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>destination</name>
            <comment>The element destination is a metadata element specifying the URI of the destination of the modification.</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="force" type="periodType">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>force</name>
            <comment>The element force is a metadata element specifying the period of the force modification.</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="efficacy" type="periodType">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>efficacy</name>
            <comment>The element efficacy is a metadata element specifying the period of the efficacy modification.</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="application" type="periodType">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>application</name>
            <comment>The element efficacy is a metadata element specifying the period of the efficacy modification.</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="duration" type="periodType">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>duration</name>
            <comment>The element duration is a metadata element specifying the period of the duration modification.</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="condition">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>condition</name>
            <comment>The element condition is a metadata element specifying an open set (unmanaged by Akoma Ntoso) of conditions on the modification</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:complexType>
			      <xsd:complexContent>
				        <xsd:extension base="anyOtherType">
					          <xsd:attribute name="frozen" type="xsd:boolean"/>
				        </xsd:extension>
			      </xsd:complexContent>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="old" type="anyOtherType">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>old</name>
            <comment>The element old is a metadata element containing (in some unmanaged form) the old text of the modification.</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="new" type="anyOtherType">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>new</name>
            <comment>The element new is a metadata element containing (in some unmanaged form) the new text of the modification.</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="domain" type="anyOtherType">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>domain</name>
            <comment>The element domain is a metadata element containing (in some unmanaged form) the domain to which the modification applies.</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:group name="docRefs">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Group</type>
            <name>docRefs</name>
            <comment>The group docrefs is a list of types of legal references to documents.</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:choice>
			      <xsd:element ref="original"/>
			      <xsd:element ref="passiveRef"/>
			      <xsd:element ref="activeRef"/>
			      <xsd:element ref="jurisprudence"/>
			      <xsd:element ref="hasAttachment"/>
			      <xsd:element ref="attachmentOf"/>
		    </xsd:choice>
	  </xsd:group>

	  <xsd:group name="TLCs">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Group</type>
            <name>TLCs</name>
            <comment>The group TLCs is a list of types of Top Level classes of the Akoma Ntoso ontology.</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:choice>
			      <xsd:element ref="TLCPerson"/>
			      <xsd:element ref="TLCOrganization"/>
			      <xsd:element ref="TLCConcept"/>
			      <xsd:element ref="TLCObject"/>
			      <xsd:element ref="TLCEvent"/>
			      <xsd:element ref="TLCPlace"/>
			      <xsd:element ref="TLCProcess"/>
			      <xsd:element ref="TLCRole"/>
			      <xsd:element ref="TLCTerm"/>
			      <xsd:element ref="TLCReference"/>
		    </xsd:choice>
	  </xsd:group>

	  <xsd:group name="refItems">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Group</type>
            <name>refItems</name>
            <comment>The group refItems is a list of types of references used in the references section.</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:choice>
			      <xsd:group ref="docRefs"/>
			      <xsd:group ref="TLCs"/>
		    </xsd:choice>
	  </xsd:group>

	  <xsd:element name="references">
		    <xsd:complexType>
			      <xsd:sequence minOccurs="1" maxOccurs="unbounded">
				        <xsd:group ref="refItems"/>
			      </xsd:sequence>
				     <xsd:attributeGroup ref="source"/>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="original" type="referenceType">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>original</name>
            <comment>The element original is a metadata reference to the Akoma Ntoso URI of the original version of this document (i.e., the first expression)</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="passiveRef" type="referenceType">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>passiveRef</name>
            <comment>The element passiveRef is a metadata reference to the Akoma Ntoso URI of a document providing modifications on this document (i.e., a passive references)</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="activeRef" type="referenceType">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>activeRef</name>
            <comment>The element activeRef is a metadata reference to the Akoma Ntoso URI of a document that is modified by this document (i.e., an active references)</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="jurisprudence" type="referenceType">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>jurisprudence</name>
            <comment>The element jurisprudence is a metadata reference to the Akoma Ntoso URI of a document providing jurisprudence on this document</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="hasAttachment">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>hasAttachment</name>
            <comment>The element hasAttachment is a metadata reference to the Akoma Ntoso URI of an attachment of this document</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:complexType>
			      <xsd:complexContent>
				        <xsd:extension base="referenceType">
					          <xsd:attribute name="type" type="xsd:string"/>
				        </xsd:extension>
			      </xsd:complexContent>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="attachmentOf">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>attachmentOf</name>
            <comment>The element attachmentOf is a metadata reference to the Akoma Ntoso URI of a document of which this document is an attachment</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:complexType>
			      <xsd:complexContent>
				        <xsd:extension base="referenceType">
					          <xsd:attribute name="type" type="xsd:string"/>
				        </xsd:extension>
			      </xsd:complexContent>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="TLCPerson" type="referenceType">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>TLCPerson</name>
            <comment>The element TLCPerson is a metadata reference to the Akoma Ntoso URI of an ontology instance of the class Person</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="TLCOrganization" type="referenceType">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>TLCOrganization</name>
            <comment>The element TLCOrganization is a metadata reference to the Akoma Ntoso URI of an ontology instance of the class Organization</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="TLCConcept" type="referenceType">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>TLCConcept</name>
            <comment>The element TLCConcept is a metadata reference to the Akoma Ntoso URI of an ontology instance of the class Concept</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="TLCObject" type="referenceType">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>TLCObject</name>
            <comment>The element TLCObject is a metadata reference to the Akoma Ntoso URI of an ontology instance of the class Object</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="TLCEvent" type="referenceType">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>TLCEvent</name>
            <comment>The element TLCEvent is a metadata reference to the Akoma Ntoso URI of an ontology instance of the class Event</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="TLCPlace" type="referenceType">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>TLCPlace</name>
            <comment>The element TLCPlace is a metadata reference to the Akoma Ntoso URI of an ontology instance of the class Place</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="TLCProcess" type="referenceType">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>TLCProcess</name>
            <comment>The element TLCProcess is a metadata reference to the Akoma Ntoso URI of an ontology instance of the class Process</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="TLCRole" type="referenceType">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>TLCRole</name>
            <comment>The element TLCRole is a metadata reference to the Akoma Ntoso URI of an ontology instance of the class Role</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="TLCTerm" type="referenceType">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>TLCTerm</name>
            <comment>The element TLCTerm is a metadata reference to the Akoma Ntoso URI of an ontology instance of the class Term</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="TLCReference">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>TLCReference</name>
            <comment>The element TLCreference is a generic metadata reference to the Akoma Ntoso URI of an ontology instance of a class specified through the name attribute</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:complexType>
			      <xsd:complexContent>
				        <xsd:extension base="referenceType">
					          <xsd:attributeGroup ref="name"/>
				        </xsd:extension>
			      </xsd:complexContent>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="notes">
		    <xsd:complexType>
			      <xsd:sequence minOccurs="1" maxOccurs="unbounded">
				        <xsd:element ref="note"/>
			      </xsd:sequence>
				     <xsd:attributeGroup ref="source"/>
		    </xsd:complexType>
	  </xsd:element>

	  <xsd:element name="note" type="blocksreq">
      <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>note</name>
            <comment>The element note is a metadata element containing the text of the footnote and endnote specified.</comment>
				     </xsd:documentation>
		    </xsd:annotation>
   </xsd:element>
		


	  <xsd:element name="proprietary">
		    <xsd:annotation>
			      <xsd:documentation>
			         <type>Element</type>
            <name>proprietary</name>
            <comment>The element proprietary is a metadata container of any additional metadata property that does not belong to the Akoma Ntoso properties. Anything can be placed in this element..</comment>
				     </xsd:documentation>
		    </xsd:annotation>

		    <xsd:complexType>
			      <xsd:complexContent>
				        <xsd:extension base="anyOtherType">
					          <xsd:attributeGroup ref="source"/>
				        </xsd:extension>
			      </xsd:complexContent>
		    </xsd:complexType>
	  </xsd:element>

	

</xsd:schema>